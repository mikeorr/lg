%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 200 600 624
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 5 div 0 0 0.5 5 div neg  0 3120 5 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%--use color 1 
%--end use color 1 
/Times-Roman findfont 100 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
32 Setcolor
[] 0 setdash
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
(-4.5) 636 3906 0  0.00 [636 3816 229 120] Show
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[975 3710 975 3741 
] dogrey 
(-4.1) 1086 3906 0  0.00 [1086 3816 229 120] Show
 (drawsegs) 4 [ 32]
[1200 3710 1200 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[1425 3710 1425 3741 
] dogrey 
(-3.7) 1536 3906 0  0.00 [1536 3816 229 120] Show
 (drawsegs) 4 [ 32]
[1650 3710 1650 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[1875 3710 1875 3741 
] dogrey 
(-3.3) 1986 3906 0  0.00 [1986 3816 229 120] Show
 (drawsegs) 4 [ 32]
[2100 3710 2100 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[2325 3710 2325 3741 
] dogrey 
(-2.9) 2436 3906 0  0.00 [2436 3816 229 120] Show
 (drawsegs) 4 [ 32]
[2550 3710 2550 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[2775 3710 2775 3741 
] dogrey 
(-2.5) 2886 3906 0  0.00 [2886 3816 229 120] Show
 (drawsegs) 4 [ 32]
[3000 3710 3000 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[3225 3710 3225 3741 
] dogrey 
(-2.1) 3336 3906 0  0.00 [3336 3816 229 120] Show
 (drawsegs) 4 [ 32]
[3450 3710 3450 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[3675 3710 3675 3741 
] dogrey 
(-1.7) 3786 3906 0  0.00 [3786 3816 229 120] Show
 (drawsegs) 4 [ 32]
[3900 3710 3900 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[4125 3710 4125 3741 
] dogrey 
(-1.3) 4236 3906 0  0.00 [4236 3816 229 120] Show
 (drawsegs) 4 [ 32]
[4350 3710 4350 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[4575 3710 4575 3741 
] dogrey 
(-0.9) 4686 3906 0  0.00 [4686 3816 229 120] Show
 (drawsegs) 4 [ 32]
[4800 3710 4800 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[5025 3710 5025 3741 
] dogrey 
(-0.5) 5136 3906 0  0.00 [5136 3816 229 120] Show
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
(-1.0) 449 3770 0  0.00 [449 3680 229 120] Show
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3551 720 3551 
] dogrey 
(-0.6) 449 3452 0  0.00 [449 3362 229 120] Show
 (drawsegs) 4 [ 32]
[750 3392 690 3392 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3233 720 3233 
] dogrey 
(-0.2) 449 3134 0  0.00 [449 3044 229 120] Show
 (drawsegs) 4 [ 32]
[750 3074 690 3074 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2915 720 2915 
] dogrey 
(0.2) 506 2816 0  0.00 [506 2726 172 120] Show
 (drawsegs) 4 [ 32]
[750 2756 690 2756 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2597 720 2597 
] dogrey 
(0.6) 506 2498 0  0.00 [506 2408 172 120] Show
 (drawsegs) 4 [ 32]
[750 2438 690 2438 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2279 720 2279 
] dogrey 
(1.0) 506 2180 0  0.00 [506 2090 172 120] Show
 (drawsegs) 4 [ 32]
[750 2120 690 2120 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1961 720 1961 
] dogrey 
(1.4) 506 1862 0  0.00 [506 1772 172 120] Show
 (drawsegs) 4 [ 32]
[750 1802 690 1802 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1643 720 1643 
] dogrey 
(1.8) 506 1544 0  0.00 [506 1454 172 120] Show
 (drawsegs) 4 [ 32]
[750 1484 690 1484 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1325 720 1325 
] dogrey 
(2.2) 506 1226 0  0.00 [506 1136 172 120] Show
 (drawsegs) 4 [ 32]
[750 1166 690 1166 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1007 720 1007 
] dogrey 
(2.6) 506 908 0  0.00 [506 818 172 120] Show
 (drawsegs) 4 [ 32]
[750 848 690 848 
] dogrey 
 (drawsegs) 4 [ 32]
[750 689 720 689 
] dogrey 
(3.0) 506 590 0  0.00 [506 500 172 120] Show
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
[] 0 setdash
32 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 12 [ 0]
[750 627 753 614 753 612 754 609 768 543 770 530 
] dogrey 
0 Setcolor
/absolu true def
32 Setcolor
(0.58) 754 609 0  0.00 [754 519 229 120] Show
1 Setcolor
/closeflag false def
 (drawpoly) 18 [ 0]
[750 754 763 702 765 693 768 680 779 632 784 612 790 583 794 561 801 530 
] dogrey 
1 Setcolor
/absolu true def
32 Setcolor
(0.59) 779 632 0  0.00 [779 542 229 120] Show
2 Setcolor
/closeflag false def
 (drawpoly) 70 [ 0]
[750 1393 764 1355 768 1345 775 1328 788 1291 799 1264 812 1226 815 1218 828 1182 835 1161 
854 1109 857 1101 858 1096 865 1074 880 1029 883 1019 888 1003 900 962 908 938 919 900 
920 895 931 856 939 827 947 799 953 775 957 758 971 700 973 693 974 688 981 658 
989 618 991 612 992 603 1003 546 1006 530 
] dogrey 
2 Setcolor
/absolu true def
32 Setcolor
(0.65) 900 962 0  0.00 [900 872 229 120] Show
3 Setcolor
/closeflag false def
 (drawpoly) 156 [ 0]
[750 2453 767 2417 773 2405 785 2380 797 2357 813 2324 826 2296 847 2255 854 2242 857 2236 
865 2218 886 2176 894 2161 909 2130 916 2115 934 2079 946 2055 972 2004 975 1998 976 1995 
981 1986 1006 1934 1015 1916 1033 1880 1035 1873 1055 1835 1065 1813 1093 1755 1094 1753 1095 1752 
1096 1749 1124 1691 1133 1672 1151 1633 1152 1630 1171 1590 1181 1568 1206 1512 1208 1508 1209 1507 
1212 1500 1236 1444 1243 1427 1257 1395 1262 1381 1278 1345 1288 1318 1304 1280 1310 1264 1314 1254 
1327 1219 1338 1190 1341 1182 1345 1170 1360 1124 1369 1101 1381 1063 1382 1058 1395 1019 1403 991 
1412 959 1418 938 1422 923 1438 859 1439 856 1439 854 1442 842 1455 784 1457 775 1459 763 
1468 712 1472 693 1475 670 1480 638 1484 612 1488 580 1490 563 1493 530 
] dogrey 
3 Setcolor
/absolu true def
32 Setcolor
(0.82) 1209 1507 0  0.00 [1209 1417 229 120] Show
4 Setcolor
/closeflag false def
 (drawpoly) 260 [ 0]
[2231 530 2232 543 2239 604 2240 612 2240 618 2246 690 2246 693 2246 696 2249 774 2249 775 
2249 775 2248 855 2248 856 2248 858 2243 933 2243 938 2242 943 2234 1008 2233 1019 2230 1033 
2222 1081 2218 1101 2212 1128 2206 1152 2199 1182 2188 1220 2185 1228 2174 1264 2166 1286 2149 1336 
2145 1345 2143 1351 2135 1370 2116 1414 2111 1427 2099 1452 2088 1475 2072 1508 2058 1536 2035 1579 
2029 1590 2027 1595 2019 1608 1994 1653 1984 1672 1960 1711 1958 1715 1935 1753 1926 1768 1904 1803 
1890 1825 1885 1835 1869 1859 1855 1881 1833 1916 1819 1937 1788 1984 1783 1994 1780 1998 1773 2009 
1746 2049 1727 2079 1709 2105 1673 2161 1673 2161 1673 2161 1673 2161 1636 2216 1620 2242 1600 2272 
1574 2312 1567 2324 1564 2328 1558 2338 1527 2384 1514 2405 1491 2440 1478 2462 1462 2487 1456 2497 
1442 2518 1420 2553 1411 2568 1386 2608 1385 2610 1361 2650 1350 2667 1327 2706 1316 2724 1311 2732 
1300 2751 1281 2781 1263 2813 1247 2838 1218 2890 1215 2895 1214 2897 1212 2901 1181 2954 1168 2976 
1148 3012 1140 3027 1123 3058 1115 3071 1096 3106 1083 3130 1078 3139 1066 3160 1050 3188 1033 3221 
1019 3248 996 3291 991 3302 988 3307 981 3321 957 3367 948 3384 929 3420 926 3426 906 3465 
895 3487 866 3546 866 3547 866 3547 865 3548 836 3607 825 3628 806 3668 804 3672 786 3710 
] dogrey 
4 Setcolor
/absolu true def
32 Setcolor
(1.13) 1673 2161 0  0.00 [1673 2071 229 120] Show
5 Setcolor
/closeflag false def
 (drawpoly) 278 [ 0]
[3015 530 3026 553 3055 609 3056 612 3056 613 3058 616 3084 675 3094 693 3111 731 3113 736 
3133 775 3142 796 3172 856 3172 856 3173 856 3173 857 3200 919 3210 938 3226 975 3228 980 
3247 1019 3257 1042 3284 1097 3285 1101 3286 1103 3288 1108 3312 1166 3320 1182 3333 1213 3338 1229 
3354 1264 3363 1292 3379 1328 3385 1345 3388 1356 3404 1401 3411 1422 3413 1427 3416 1435 3429 1491 
3435 1508 3440 1534 3443 1562 3449 1590 3450 1623 3450 1639 3452 1672 3447 1702 3441 1727 3437 1753 
3430 1771 3404 1821 3399 1831 3397 1835 3387 1846 3358 1883 3328 1916 3310 1931 3288 1948 3257 1975 
3230 1998 3201 2017 3173 2036 3143 2058 3114 2079 3084 2098 3058 2115 3025 2138 2993 2161 2966 2178 
2942 2194 2908 2218 2875 2242 2850 2259 2827 2275 2793 2300 2762 2324 2737 2342 2712 2361 2682 2385 
2657 2405 2628 2428 2596 2453 2575 2472 2557 2487 2522 2516 2481 2553 2471 2562 2464 2568 2421 2608 
2408 2620 2376 2650 2371 2654 2365 2660 2323 2701 2293 2732 2275 2749 2250 2775 2229 2798 2215 2813 
2183 2847 2149 2884 2140 2895 2138 2897 2135 2900 2093 2947 2069 2976 2050 2998 2019 3035 2007 3049 
2000 3058 1975 3089 1965 3101 1935 3139 1924 3153 1904 3179 1883 3206 1872 3221 1843 3259 1837 3268 
1812 3302 1804 3313 1788 3335 1765 3367 1754 3384 1727 3422 1720 3432 1698 3465 1690 3477 1673 3502 
1653 3532 1643 3547 1617 3586 1616 3588 1591 3628 1580 3644 1558 3681 1545 3701 1540 3710 
] dogrey 
5 Setcolor
/absolu true def
32 Setcolor
(1.66) 2966 2178 0  0.00 [2966 2088 229 120] Show
5 Setcolor
/closeflag false def
 (drawpoly) 116 [ 0]
[5250 2436 5217 2429 5150 2405 5139 2402 5135 2400 5124 2398 5047 2386 5019 2378 4974 2373 4949 2374 
4904 2368 4856 2371 4827 2378 4788 2383 4766 2390 4740 2405 4713 2434 4699 2469 4688 2487 4687 2497 
4692 2555 4691 2568 4695 2584 4710 2624 4715 2650 4734 2688 4736 2695 4752 2732 4763 2749 4788 2795 
4795 2808 4797 2813 4804 2824 4831 2865 4847 2895 4867 2921 4904 2976 4904 2976 4904 2976 4905 2977 
4944 3029 4963 3058 4984 3082 5019 3127 5025 3135 5028 3139 5040 3154 5068 3187 5094 3221 5110 3238 
5135 3265 5154 3288 5165 3302 5199 3339 5220 3362 5239 3384 5244 3388 5250 3395 
] dogrey 
5 Setcolor
/absolu true def
32 Setcolor
(1.66) 4788 2795 0  0.00 [4788 2705 229 120] Show
6 Setcolor
/closeflag false def
 (drawpoly) 146 [ 0]
[3645 530 3654 544 3678 581 3699 612 3715 636 3750 682 3755 690 3758 693 3765 704 3792 745 
3815 775 3832 798 3865 840 3873 851 3877 856 3890 874 3912 905 3939 938 3954 957 3981 988 
3996 1009 4005 1019 4036 1058 4038 1061 4073 1101 4082 1111 4096 1126 4125 1162 4144 1182 4169 1212 
4212 1254 4216 1260 4220 1264 4235 1280 4261 1310 4297 1345 4309 1358 4327 1374 4356 1406 4378 1427 
4405 1453 4442 1486 4455 1499 4466 1508 4505 1546 4558 1589 4558 1589 4559 1590 4564 1594 4608 1636 
4654 1672 4662 1679 4673 1687 4714 1724 4754 1753 4770 1766 4788 1779 4824 1810 4859 1835 4880 1852 
4904 1867 4935 1894 4968 1916 4992 1935 5019 1952 5049 1977 5080 1998 5106 2018 5135 2035 5163 2059 
5194 2079 5221 2100 5250 2117 
] dogrey 
6 Setcolor
/absolu true def
32 Setcolor
(2.44) 4309 1358 0  0.00 [4309 1268 229 120] Show
6 Setcolor
/closeflag false def
 (drawpoly) 184 [ 0]
[5244 3710 5189 3671 5135 3633 5132 3631 5128 3628 5073 3590 5019 3552 5015 3550 5010 3547 4956 3510 
4904 3474 4897 3470 4889 3465 4837 3431 4788 3399 4777 3392 4762 3384 4715 3354 4673 3328 4653 3317 
4626 3302 4589 3280 4558 3262 4523 3245 4475 3221 4456 3211 4442 3203 4387 3178 4374 3172 4327 3151 
4315 3147 4293 3139 4240 3119 4212 3107 4162 3093 4134 3084 4096 3073 4079 3070 4022 3058 3991 3051 
3981 3048 3964 3046 3895 3037 3865 3033 3828 3031 3790 3030 3750 3028 3710 3030 3671 3032 3635 3033 
3605 3037 3534 3047 3519 3049 3510 3051 3481 3058 3422 3071 3404 3075 3361 3088 3340 3094 3288 3111 
3263 3121 3219 3139 3189 3151 3173 3158 3120 3183 3087 3200 3058 3215 3053 3218 3048 3221 2989 3254 
2942 3282 2928 3292 2913 3302 2868 3332 2827 3361 2811 3373 2797 3384 2755 3415 2712 3450 2702 3458 
2694 3465 2649 3503 2617 3532 2601 3547 2599 3549 2596 3551 2549 3595 2515 3628 2500 3642 2481 3663 
2453 3691 2435 3710 
] dogrey 
6 Setcolor
/absolu true def
32 Setcolor
(2.44) 3750 3028 0  0.00 [3750 2938 229 120] Show
7 Setcolor
/closeflag false def
 (drawpoly) 114 [ 0]
[4111 530 4124 550 4143 578 4168 612 4182 632 4212 669 4223 685 4229 693 4247 718 4262 739 
4290 775 4303 792 4327 821 4344 844 4353 856 4385 897 4385 897 4419 938 4427 948 4442 965 
4469 1000 4485 1019 4511 1052 4554 1098 4556 1101 4557 1101 4558 1102 4599 1153 4625 1182 4643 1203 
4673 1234 4689 1253 4699 1264 4733 1303 4744 1314 4775 1345 4780 1351 4788 1359 4825 1401 4851 1427 
4872 1450 4904 1480 4919 1497 4931 1508 4966 1546 4997 1574 5014 1590 5016 1592 5019 1595 5062 1641 
5095 1672 5111 1688 5135 1708 5160 1735 5179 1753 5209 1782 5250 1817 
] dogrey 
7 Setcolor
/absolu true def
32 Setcolor
(3.53) 4625 1182 0  0.00 [4625 1092 229 120] Show
7 Setcolor
/closeflag false def
 (drawpoly) 28 [ 0]
[4356 3710 4332 3706 4327 3705 4319 3704 4231 3696 4212 3694 4187 3693 4122 3692 4096 3691 4070 3692 
4001 3696 3981 3696 3964 3698 3872 3710 
] dogrey 
7 Setcolor
/absolu true def
32 Setcolor
(3.53) 4122 3692 0  0.00 [4122 3602 229 120] Show
8 Setcolor
/closeflag false def
 (drawpoly) 90 [ 0]
[4471 530 4497 569 4499 572 4528 612 4538 626 4558 651 4576 680 4586 693 4615 733 4615 734 
4646 775 4655 787 4673 809 4695 841 4707 856 4735 894 4746 907 4770 938 4776 946 4788 961 
4816 1000 4832 1019 4857 1052 4893 1093 4899 1101 4901 1103 4904 1106 4941 1156 4963 1182 4984 1207 
5019 1247 5028 1258 5033 1264 5051 1286 5069 1310 5101 1345 5113 1360 5135 1383 5157 1411 5171 1427 
5200 1462 5233 1497 5244 1508 5246 1511 5250 1514 
] dogrey 
8 Setcolor
/absolu true def
32 Setcolor
(4.98) 4857 1052 0  0.00 [4857 962 229 120] Show
9 Setcolor
/closeflag false def
 (drawpoly) 62 [ 0]
[4767 530 4774 540 4788 561 4810 596 4821 612 4847 651 4850 655 4877 693 4886 706 4904 730 
4924 761 4934 775 4962 815 4962 815 4992 856 5001 869 5019 893 5039 923 5050 938 5078 978 
5082 982 5110 1019 5119 1031 5135 1050 5158 1084 5170 1101 5198 1138 5212 1155 5233 1182 5239 1190 
5250 1203 
] dogrey 
9 Setcolor
/absolu true def
32 Setcolor
(6.84) 5001 869 0  0.00 [5001 779 229 120] Show
10 Setcolor
/closeflag false def
 (drawpoly) 32 [ 0]
[5020 530 5021 532 5054 587 5070 612 5090 643 5116 680 5125 693 5128 698 5135 707 5164 754 
5177 775 5200 810 5217 833 5233 856 5239 864 5250 880 
] dogrey 
10 Setcolor
/absolu true def
32 Setcolor
(9.17) 5135 707 0  0.00 [5135 617 229 120] Show
11 Setcolor
/closeflag false def
 (drawpoly) 6 [ 0]
[5241 530 5244 534 5250 543 
] dogrey 
11 Setcolor
/absolu true def
32 Setcolor
(12.01) 5244 534 0  0.00 [5244 444 287 120] Show
-1 -1 200000 200000 setclipzone
(Contour Plot of g\(u, v\)) 2340 313 0  0.00 [2340 223 1320 120] Show
(u) 5596 3493 0  0.00 [5596 3403 57 120] Show
(v) 1096 446 0  0.00 [1096 356 57 120] Show
 showpage

 end saved restore 

